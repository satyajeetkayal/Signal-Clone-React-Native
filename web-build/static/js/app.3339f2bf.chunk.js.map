{"version":3,"sources":["firebase.js","screens/LoginScreen.js","screens/RegisterScreen.js","components/CustomListItem.js","screens/HomeScreen.js","screens/AddChatScreen.js","screens/ChatScreen.js","App.js"],"names":["db","firebase","length","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","LoginScreen","navigation","useState","email","setEmail","password","setPassword","useEffect","onAuthStateChanged","authUser","console","log","replace","signIn","signInWithEmailAndPassword","catch","error","alert","KeyboardAvoidingView","behavior","style","styles","container","StatusBar","source","uri","width","height","View","inputContainer","placeholder","autoFocus","type","value","onChangeText","text","secureTextEntry","onSubmitEditing","containerStyle","button","onPress","title","navigate","StyleSheet","create","flex","alignItems","justifyContent","padding","backgroundColor","marginTop","RegisterScreen","name","setName","profilePic","setProfilePic","getPermissions","a","async","Platform","OS","ImagePicker","status","pickImage","mediaTypes","All","allowsEditing","aspect","quality","result","cancelled","register","createUserWithEmailAndPassword","then","user","updateProfile","displayName","photoURL","message","useLayoutEffect","setOptions","headerBackTitle","h3","marginBottom","profileImage","AntDesign","size","color","raised","borderRadius","overflow","alignSelf","CustomListItem","id","chatName","enterChat","chatMessages","setChatMessages","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","key","bottomDivider","rounded","Content","Title","fontWeight","Subtitle","numberOfLines","ellipsizeMode","HomeScreen","chats","setChats","signOutUser","signOut","headerTitleAlign","headerStyle","headerTitleStyle","headerTintStyle","headerLeft","marginLeft","TouchableOpacity","activeOpacity","currentUser","headerRight","flexDirection","marginRight","SimpleLineIcons","ScrollView","AddChatScreen","input","setInput","createChat","add","goBack","leftIcon","disabled","ChatScreen","route","messages","setMessages","headerBackTitleVisible","headerTitle","Text","params","scrollDownFunc","sendMessage","Keyboard","dismiss","timestamp","FieldValue","serverTimestamp","scrollDownDelayed","setTimeout","unsubscribe","scrollDown","useRef","current","scrollToEnd","keyboardVerticalOffset","TouchableWithoutFeedback","ref","contentContainerStyle","paddingTop","reciever","position","bottom","right","recieverText","sender","left","senderText","senderName","footer","TextInput","onFocus","textInput","Ionicons","borderColor","maxWidth","margin","paddingRight","fontSize","Stack","createStackNavigator","globalScreenOptions","headerTintColor","App","NavigationContainer","Navigator","screenOptions","Screen","component"],"mappings":"oOAuBQA,G,eAPsB,IAAzBC,OAAcC,OACPD,gBAZW,CACnBE,OAAQ,0CACRC,WAAY,yCACZC,UAAW,yBACXC,cAAe,qCACfC,kBAAmB,eACnBC,MAAO,8CASCP,SAGKQ,aACTC,EAAOT,SCqCAU,EAtDS,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WAAgB,EAEbC,mBAAS,IAFI,WAEhCC,EAFgC,KAEzBC,EAFyB,OAGNF,mBAAS,IAHH,WAG/BG,EAH+B,KAGrBC,EAHqB,KAKtCC,qBAAU,WASG,OARWR,EAAKS,oBAAmB,SAACC,GACzCC,QAAQC,IAAIF,GACTA,GAECR,EAAWW,QAAQ,aAKvB,IAER,IAAMC,EAAS,WACXd,EACCe,2BAA2BX,EAAOE,GAClCU,OAAM,SAACC,GAAD,OAAWC,MAAMD,OAG5B,OACI,kBAACE,EAAA,EAAD,CAAsBC,SAAS,UAAUC,MAAOC,EAAOC,WACnD,kBAACC,EAAA,EAAD,CAAWH,MAAM,UACjB,kBAAC,IAAD,CAAOI,OAAQ,CACXC,IAAI,0EAERL,MAAO,CAACM,MAAM,IAAKC,OAAQ,OAE3B,kBAACC,EAAA,EAAD,CAAMR,MAAOC,EAAOQ,gBAChB,kBAAC,IAAD,CAAOC,YAAY,QACnBC,WAAS,EAACC,KAAK,QACfC,MAAO9B,EACP+B,aAAc,SAACC,GAAD,OAAS/B,EAAS+B,MAEhC,kBAAC,IAAD,CAAOL,YAAY,WACnBM,iBAAe,EAACJ,KAAK,WACrBC,MAAO5B,EACP6B,aAAc,SAACC,GAAD,OAAS7B,EAAY6B,IACnCE,gBAAiBxB,KAGrB,kBAAC,IAAD,CAAQyB,eAAgBjB,EAAOkB,OAAQC,QAAS3B,EAAQ4B,MAAM,UAC9D,kBAAC,IAAD,CAAQH,eAAgBjB,EAAOkB,OAC/BC,QAAS,kBAAKvC,EAAWyC,SAAS,aAClCV,KAAK,UACLS,MAAM,eAQZpB,EAASsB,IAAWC,OAAO,CAEjCtB,UAAU,CAENuB,KAAK,EACLC,WAAW,SACXC,eAAe,SACfC,QAAS,GACTC,gBAAgB,SAEpBpB,eAAe,CAEXH,MAAM,KAGVa,OAAO,CAEHb,MAAM,IACNwB,UAAW,M,2CCkCAC,EA1GQ,SAAC,GAAkB,IAAjBlD,EAAgB,EAAhBA,WAAgB,EAEdC,mBAAS,IAFK,WAE/BkD,EAF+B,KAEzBC,EAFyB,OAGZnD,mBAAS,IAHG,WAG/BC,EAH+B,KAGxBC,EAHwB,OAINF,mBAAS,IAJH,WAI/BG,EAJ+B,KAIrBC,EAJqB,OAMFJ,qBANE,WAM/BoD,EAN+B,KAMnBC,EANmB,KASlCC,EAAiB,0BAAAC,EAAAC,OAAA,mDACA,QAAhBC,SAASC,GADO,kCAAAH,EAAA,MAINI,OAJM,gBAKD,YALC,EAGZC,QAGA7C,MAAM,6CANM,OASpB8C,IAToB,6DAYlBA,EAAY,0BAAAN,EAAAC,OAAA,2EAAAD,EAAA,MAESI,IAAoC,CACnDG,WAAYH,IAA6BI,IACzCC,eAAe,EACfC,OAAQ,CAAC,EAAG,GACZC,QAAS,MANH,QAENC,EAFM,QAQEC,WACRf,EAAcc,EAAO5C,KATf,gDAYVf,QAAQC,IAAI,oBAAZ,MAZU,iEAgBT4D,EAAW,WAEhBxE,EACCyE,+BAA+BrE,EAAOE,GACtCoE,MAAK,SAAChE,GACHA,EAASiE,KAAKC,cAAc,CACxBC,YAAaxB,EACbyB,SAAUvB,GAAc,4EAG/BvC,OAAM,SAACC,GAAD,OAAUC,MAAMD,EAAM8D,aAU7B,OANDC,2BAAiB,WAChB9E,EAAW+E,WAAW,CAClBC,gBAAgB,YAEnB,CAAChF,IAGE,kBAACiB,EAAA,EAAD,CAAsBC,SAAS,UAAUC,MAAOC,EAAOC,WAC/C,kBAACC,EAAA,EAAD,CAAWH,MAAM,UACb,kBAAC,IAAD,CAAM8D,IAAE,EAAC9D,MAAO,CAAC+D,aAAc,KAA/B,2BAEA,kBAACvD,EAAA,EAAD,CAAMR,MAAOC,EAAO+D,cACjC9B,EAQD,kBAAC,IAAD,CACC9B,OAAQ,CAAEC,IAAK6B,GACflC,MAAO,CAAEM,MAAO,IAAKC,OAAQ,KAC7Ba,QAASgB,IAVV,kBAAC6B,EAAA,EAAD,CACCjC,KAAK,OACLkC,KAAM,GACNC,MAAM,QACN/C,QAASgB,KAWA,kBAAC5B,EAAA,EAAD,CAAMR,MAAOC,EAAOQ,gBAChB,kBAAC,IAAD,CAAOC,YAAY,YACnBC,WAAS,EAACC,KAAK,OACdC,MAAOmB,EACRlB,aAAc,SAACC,GAAD,OAASkB,EAAQlB,MAE/B,kBAAC,IAAD,CAAOL,YAAY,QAChBG,MAAO9B,EACV+B,aAAc,SAACC,GAAD,OAAS/B,EAAS+B,MAEhC,kBAAC,IAAD,CAAOL,YAAY,WACnBM,iBAAe,EACfH,MAAO5B,EACP6B,aAAc,SAACC,GAAD,OAAS7B,EAAY6B,IACnCE,gBAAiBkC,KAQjB,kBAAC,IAAD,CAAQjC,eAAgBjB,EAAOkB,OAAQiD,QAAM,EAAC/C,MAAM,WAAWD,QAAS+B,MAOtFlD,EAASsB,IAAWC,OAAO,CAC7BtB,UAAU,CAEVuB,KAAK,EACLC,WAAW,SACXC,eAAe,SACfC,QAAS,GACTC,gBAAgB,SAGhBpB,eAAe,CACXH,MAAM,KAEVa,OAAO,CACPb,MAAM,IACNwB,UAAU,IAEVkC,aAAc,CAChBnC,gBAAiB,UACjBwC,aAAc,GACd9D,OAAQ,GACRD,MAAO,GACPwB,WAAY,GACZiC,aAAc,GACdO,SAAU,SACVC,UAAW,SACX7C,WAAY,SACZC,eAAgB,Y,QCnGH6C,EAxCQ,SAAC,GAA+B,IAAD,MAA7BC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,UAAe,EAEV7F,mBAAS,IAFC,WAE3C8F,EAF2C,KAE7BC,EAF6B,KAiBlD,OAbA1F,qBAAU,WAQF,OAPoBlB,EACnB6G,WAAW,SACXC,IAAIN,GAAIK,WAAW,YACnBE,QAAQ,YAAY,OACpBC,YAAW,SAACC,GAAD,OACZL,EAAgBK,EAASC,KAAKC,KAAI,SAACL,GAAD,OAAQA,EAAIM,iBASlD,kBAAC,IAAD,CAAUC,IAAKb,EAAIrD,QAAS,kBAAKuD,EAAUF,EAAIC,IAAWY,IAAKb,EAAIc,eAAa,GAC5E,kBAAC,IAAD,CACIC,SAAO,EACHpF,OAAQ,CACHC,KAAiB,MAAZuE,GAAA,SAAAA,EAAe,SAAf,IAAmBnB,WACxB,0EAIZ,kBAAC,IAASgC,QAAV,KACI,kBAAC,IAASC,MAAV,CAAgB1F,MAAO,CAAC2F,WAAY,QAChCjB,GAEJ,kBAAC,IAASkB,SAAV,CAAmBC,cAAe,EAAGC,cAAc,QAAnD,MACElB,GADF,SACEA,EAAe,SADjB,EACE,EAAmBpB,YADrB,UACmCoB,GADnC,SACmCA,EAAe,SADlD,EACmC,EAAmBlB,Y,GASxDnC,IAAWC,OAAO,I,gBCgClBuE,EArEI,SAAC,GAAkB,IAAjBlH,EAAgB,EAAhBA,WAAgB,EAEPC,mBAAS,IAFF,WAE1BkH,EAF0B,KAEnBC,EAFmB,KAI3BC,EAAc,WAChBvH,EAAKwH,UAAU9C,MAAK,WAChBxE,EAAWW,QAAQ,aAI3BL,qBAAU,WAON,OANoBlB,EAAG6G,WAAW,SAASG,YAAW,SAAAC,GAClDe,EAASf,EAASC,KAAKC,KAAI,SAAAL,GAAG,MAAK,CAC/BN,GAAIM,EAAIN,GACRY,KAAMN,EAAIM,iBAInB,IAEH1B,2BAAgB,WACZ9E,EAAW+E,WAAW,CAClBvC,MAAM,SACN+E,iBAAiB,OACjBC,YAAY,CAACxE,gBAAgB,QAC7ByE,iBAAiB,CAACnC,MAAM,SACxBoC,gBAAgB,QAChBC,WAAY,wBACR,kBAAChG,EAAA,EAAD,CAAMR,MAAO,CAACyG,WAAY,KACtB,kBAACC,EAAA,EAAD,CAAkBtF,QAAS8E,EAAaS,cAAe,IACvD,kBAAC,IAAD,CAAQnB,SAAO,EAACpF,OAAQ,CAACC,IAAG,MAAE1B,GAAF,SAAEA,EAAMiI,kBAAR,EAAE,EAAmBnD,eAIzDoD,YAAa,kBAET,kBAACrG,EAAA,EAAD,CAAMR,MAAO,CAAC8G,cAAgB,MAAOnF,eAAe,gBAAiBrB,MAAM,GAAIyG,YAAY,KACvF,kBAACL,EAAA,EAAD,CAAkBC,cAAe,IAC7B,kBAAC1C,EAAA,EAAD,CAAWjC,KAAK,UAAUkC,KAAM,GAAIC,MAAM,WAE9C,kBAACuC,EAAA,EAAD,CAAkBC,cAAe,IAC7B,kBAACK,EAAA,EAAD,CAAiB5F,QAAS,kBAAKvC,EAAWyC,SAAS,YAAYU,KAAK,SAASkC,KAAM,GAAIC,MAAM,iBAM/G,CAACtF,IAEJ,IAAM8F,EAAW,SAACF,EAAIC,GAClB7F,EAAWyC,SAAS,OAAO,CACvBmD,KACCC,cAIR,OACI,kBAAClE,EAAA,EAAD,KACI,kBAACL,EAAA,EAAD,CAAWH,MAAM,UACrB,kBAACiH,EAAA,EAAD,CAAYjH,MAAOC,EAAOC,WACrB8F,EAAMZ,KAAI,gBAAEX,EAAF,EAAEA,GAAWC,EAAb,EAAMW,KAAOX,SAAb,OACP,kBAAC,EAAD,CAAgBY,IAAKb,EAAIA,GAAIA,EAAIC,SAAUA,EAAUC,UAAWA,UAU1E1E,EAASsB,IAAWC,OAAO,CACjCtB,UAAU,CACNK,OAAO,U,SCzCI2G,EApCO,SAAC,GAAkB,IAAjBrI,EAAgB,EAAhBA,WAAgB,EAEVC,mBAAS,IAFC,WAE7BqI,EAF6B,KAEtBC,EAFsB,KAIpCzD,2BAAgB,WACZ9E,EAAW+E,WAAW,CAClBvC,MAAO,iBACPwC,gBAAgB,YAGrB,CAAChF,IAEJ,IAAMwI,EAAa,oBAAAhF,EAAAC,OAAA,kEAAAD,EAAA,MACTpE,EAAG6G,WAAW,SAASwC,IAAI,CAC7B5C,SAAUyC,IACX9D,MAAK,WACJxE,EAAW0I,YAEZ5H,OAAM,SAACC,GAAD,OAAWC,MAAMD,OANX,6DASnB,OACI,kBAACY,EAAA,EAAD,CAAMR,MAAOC,EAAOC,WACpB,kBAAC,IAAD,CACCQ,YAAY,oBACZG,MAAOsG,EACPrG,aAAc,SAACC,GAAD,OAASqG,EAASrG,IAChCE,gBAAiBoG,EACjBG,SACI,kBAAC,UAAD,CAAMxF,KAAK,SAASpB,KAAK,YAAYsD,KAAM,GAAIC,MAAM,YAEzD,kBAAC,IAAD,CAAQsD,UAAWN,EAAO/F,QAASiG,EAAYhG,MAAM,sBAOxDpB,EAASsB,IAAWC,OAAO,CAC7BtB,UAAU,CACN2B,gBAAgB,QAChBD,QAAS,GACTrB,OAAO,U,yDCuHAmH,EA9JI,SAAC,GAAyB,IAAxB7I,EAAuB,EAAvBA,WAAY8I,EAAW,EAAXA,MAAW,EAElB7I,mBAAS,IAFS,WAErCqI,EAFqC,KAE9BC,EAF8B,OAGZtI,mBAAS,IAHG,WAGrC8I,EAHqC,KAG3BC,EAH2B,KAKxClE,2BAAiB,WACT9E,EAAW+E,WAAW,CAClBvC,MAAO,OACPyG,wBAAwB,EACxB1B,iBAAiB,OACjB2B,YAAa,wBACT,kBAACvH,EAAA,EAAD,CAAMR,MAAO,CAAC8G,cAAc,MAAOpF,WAAW,WAC1C,kBAAC,IAAD,CACI8D,SAAO,EACHpF,OAAQ,CAACC,IAAG,SAAEuH,EAAS,SAAX,EAAE,EAAavC,KAAK5B,YACxC,kBAACuE,EAAA,EAAD,CAAMhI,MAAO,CAACmE,MAAM,QAASsC,WAAW,GAAId,WAAW,QAASgC,EAAMM,OAAOvD,YAGrF8B,WAAY,kBACR,kBAACE,EAAA,EAAD,CAAkB1G,MAAO,CAACyG,WAAY,IAAMrF,QAASvC,EAAW0I,QAC5D,kBAACtD,EAAA,EAAD,CAAWjC,KAAK,YAAYkC,KAAM,GAAIC,MAAM,YAGpD0C,YAAa,kBACT,kBAACrG,EAAA,EAAD,CAAMR,MAAO,CAAC8G,cAAc,MAAOnF,eAAe,gBAAiBrB,MAAM,GAAIyG,YAAY,KACrF,kBAACL,EAAA,EAAD,KACA,kBAAC,IAAD,CAAa1E,KAAK,eAAekC,KAAM,GAAIC,MAAM,WAEjD,kBAACuC,EAAA,EAAD,KACI,kBAAC,IAAD,CAAa1E,KAAK,QAAQkC,KAAM,GAAIC,MAAM,eAK1D+D,MACN,CAACrJ,EAAY+I,IAEf,IAAMO,EAAa,WACjBC,IAASC,UAETpK,EAAG6G,WAAW,SACbC,IAAI4C,EAAMM,OAAOxD,IACjBK,WAAW,YACXwC,IAAI,CAACgB,UAAWpK,YAAmBqK,WAAWC,kBAC7C9E,QAASyD,EACT3D,YAAa7E,EAAKiI,YAAYpD,YAC9BzE,MAAMJ,EAAKiI,YAAY7H,MACvB0E,SAAU9E,EAAKiI,YAAYnD,WAG3B2D,EAAS,IACTc,KAIEO,EAAoB,WACtBC,YAAW,WACTR,MACC,KAGPvE,2BAAgB,WACZ,IAAMgF,EAAc1K,EACnB6G,WAAW,SACXC,IAAI4C,EAAMM,OAAOxD,IACjBK,WAAW,YACXE,QAAQ,YAAY,OACpBC,YAAW,SAACC,GAAD,OAAa2C,EAAY3C,EAASC,KAAKC,KAAI,SAAAL,GAAG,MAAI,CACtDN,GAAGM,EAAIN,GACPY,KAAMN,EAAIM,eAGlB,OADAoD,IACOE,IACR,CAAChB,IAEJ,IAAMiB,EAAaC,mBAEbX,EAAiB,WACrBU,EAAWE,QAAQC,eAIrB,OACI,kBAACvI,EAAA,EAAD,CAAMR,MAAO,CAACyB,KAAK,EAAGI,gBAAgB,UAClC,kBAAC1B,EAAA,EAAD,CAAWH,MAAM,UACjB,kBAACF,EAAA,EAAD,CACAC,SAA0B,QAAhBwC,IAASC,GAAe,UAAY,SAC9CxC,MAAOC,EAAOC,UACd8I,uBAAwB,IACpB,kBAACC,EAAA,EAAD,CAA0B7H,QAASgH,IAASC,SACxC,oCACA,kBAACpB,EAAA,EAAD,CAAYiC,IAAKN,EAAYO,sBAAuB,CAACC,WAAY,KAC5DxB,EAASxC,KAAI,gBAAEX,EAAF,EAAEA,GAAIY,EAAN,EAAMA,KAAN,OACVA,EAAKtG,QAAUJ,EAAKiI,YAAY7H,MAC5B,kBAACyB,EAAA,EAAD,CAAM8E,IAAKb,EAAIzE,MAAOC,EAAOoJ,UACzB,kBAAC,IAAD,CACAC,SAAS,WACT9D,SAAO,EAEPtE,eAAgB,CACZoI,SAAS,WACTC,QAAS,GACTC,OAAQ,GAGZD,QAAS,GACTC,OAAQ,EACRtF,KAAM,GACN9D,OAAQ,CAACC,IAAKgF,EAAK5B,YACnB,kBAACuE,EAAA,EAAD,CAAMhI,MAAOC,EAAOwJ,cAAepE,EAAK3B,UAG5C,kBAAClD,EAAA,EAAD,CAAM8E,IAAKb,EAAIzE,MAAOC,EAAOyJ,QAEzB,kBAAC,IAAD,CACAlE,SAAO,EAEP8D,SAAS,WACTpI,eAAgB,CACZoI,SAAS,WACTC,QAAS,GACTI,MAAO,GAGXJ,QAAS,GACTI,MAAO,EACPzF,KAAM,GACN9D,OAAQ,CAACC,IAAKgF,EAAK5B,YAGnB,kBAACuE,EAAA,EAAD,CAAMhI,MAAOC,EAAO2J,YAAavE,EAAK3B,SACtC,kBAACsE,EAAA,EAAD,CAAMhI,MAAOC,EAAO4J,YAAaxE,EAAK7B,kBAMtD,kBAAChD,EAAA,EAAD,CAAMR,MAAOC,EAAO6J,QAEhB,kBAACC,EAAA,EAAD,CACIlJ,MAAOsG,EACPrG,aAAc,SAACC,GAAD,OAASqG,EAASrG,IAChCE,gBAAiBkH,EACjB6B,QAASvB,EACT/H,YAAY,iBACZV,MAAOC,EAAOgK,YAClB,kBAACvD,EAAA,EAAD,CAAkBe,UAAWN,EAAO/F,QAAS+G,EAAaxB,cAAe,IACrE,kBAACuD,EAAA,EAAD,CAAUlI,KAAK,OAAOkC,KAAM,GAAIC,MAAM,mBAa5DlE,EAASsB,IAAWC,OAAO,CAC7BtB,UAAU,CACNuB,KAAK,GAGTqI,OAAO,CACHhD,cAAc,MACdpF,WAAW,SACXpB,MAAM,OACNsB,QAAQ,IAEZqI,UAAU,CACNV,OAAO,EACPhJ,OAAO,GACPkB,KAAK,EACLsF,YAAY,GACZoD,YAAY,cACZtI,gBAAgB,UAChBD,QAAQ,GACRuC,MAAM,OACNE,aAAa,IAGjBgF,SAAS,CACLzH,QAAQ,GACRC,gBAAgB,UAChB0C,UAAU,WACVF,aAAa,GACb0C,YAAY,GACZhD,aAAc,GACdqG,SAAS,MACTd,SAAS,YAGbI,OAAO,CACH9H,QAAQ,GACRC,gBAAgB,UAChB0C,UAAU,aACVF,aAAa,GACbgG,OAAQ,GACRD,SAAS,MACTd,SAAS,YAEbG,aAAa,CAEVtF,MAAM,QACNwB,WAAW,MACXc,WAAW,IAEdmD,WAAW,CAEPzF,MAAM,QACNwB,WAAW,MACXc,WAAW,GACX1C,aAAa,IAEjB8F,WAAW,CACPF,KAAM,GACNW,aAAa,GACbC,SAAS,GACTpG,MAAM,WCxNRqG,EAAQC,cAERC,EAAsB,CAC1BrE,YAAa,CAACxE,gBAAiB,WAC/ByE,iBAAiB,CAACnC,MAAO,SACzBwG,gBAAkB,QAClBvE,iBAAkB,UAIL,SAASwE,IAItB,OACE,kBAACC,EAAA,EAAD,KACE,kBAACL,EAAMM,UAAP,CAECC,cAAeL,GACV,kBAACF,EAAMQ,OAAP,CAAchJ,KAAK,QAAQiJ,UAAWrM,IACtC,kBAAC4L,EAAMQ,OAAP,CAAchJ,KAAK,WAAWiJ,UAAWlJ,IACzC,kBAACyI,EAAMQ,OAAP,CAAchJ,KAAK,OAAOiJ,UAAWlF,IACrC,kBAACyE,EAAMQ,OAAP,CAAchJ,KAAK,UAAUiJ,UAAW/D,IACxC,kBAACsD,EAAMQ,OAAP,CAAchJ,KAAK,OAAOiJ,UAAWvD,MAQlCnG,IAAWC,OAAO,CAC/BtB,UAAW,CACTuB,KAAM,EACNI,gBAAiB,OACjBH,WAAY,SACZC,eAAgB,a","file":"static/js/app.3339f2bf.chunk.js","sourcesContent":["import * as firebase from 'firebase';\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBmpIwJ1lGS_i-WTrjzEePSf7fUqtnBMk0\",\r\n    authDomain: \"signal-clone-app-d7eef.firebaseapp.com\",\r\n    projectId: \"signal-clone-app-d7eef\",\r\n    storageBucket: \"signal-clone-app-d7eef.appspot.com\",\r\n    messagingSenderId: \"266920374782\",\r\n    appId: \"1:266920374782:web:880242f541500eaf45d0af\"\r\n  };\r\n\r\n  let app;\r\n\r\n  if(firebase.apps.length === 0){\r\n      app = firebase.initializeApp(firebaseConfig)\r\n  }\r\n  else{\r\n      app = firebase.app();\r\n  }\r\n\r\n  const db = app.firestore();\r\n  const auth = firebase.auth();\r\n\r\n  export {db, auth};","import React,{useEffect, useState} from 'react'\r\nimport { KeyboardAvoidingView } from 'react-native';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { StyleSheet, Text, View } from 'react-native'\r\nimport { Button, Image, Input } from 'react-native-elements';\r\nimport { auth } from '../firebase';\r\n\r\n    const LoginScreen = ({navigation}) => {\r\n\r\n    const[email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    useEffect(()=>{\r\n        const unsubscribe = auth.onAuthStateChanged((authUser)=>{\r\n            console.log(authUser);\r\n            if(authUser){\r\n\r\n                navigation.replace('Home');\r\n             }\r\n\r\n        });\r\n                 return unsubscribe;\r\n         }, [])\r\n\r\n    const signIn = () => {\r\n        auth\r\n        .signInWithEmailAndPassword(email, password)\r\n        .catch((error) => alert(error));\r\n    };\r\n\r\n    return (\r\n        <KeyboardAvoidingView behavior=\"padding\" style={styles.container}>\r\n            <StatusBar style=\"light\"/>\r\n            <Image source={{\r\n                uri:\"https://blog.mozilla.org/internetcitizen/files/2018/08/signal-logo.png\",\r\n            }}\r\n            style={{width:200, height: 200}} />\r\n\r\n            <View style={styles.inputContainer}>\r\n                <Input placeholder=\"Email\" \r\n                autoFocus type=\"email\" \r\n                value={email} \r\n                onChangeText={(text)=> setEmail(text)} />\r\n\r\n                <Input placeholder=\"Password\" \r\n                secureTextEntry type=\"password\" \r\n                value={password} \r\n                onChangeText={(text)=> setPassword(text)}\r\n                onSubmitEditing={signIn}/>\r\n                \r\n            </View>\r\n            <Button containerStyle={styles.button} onPress={signIn} title=\"Login\" />\r\n            <Button containerStyle={styles.button} \r\n            onPress={()=> navigation.navigate('Register')} \r\n            type=\"outline\" \r\n            title=\"Register\"/>\r\n            \r\n        </KeyboardAvoidingView>\r\n    )\r\n}\r\n\r\nexport default LoginScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n\r\ncontainer:{\r\n\r\n    flex:1, \r\n    alignItems:'center',\r\n    justifyContent:'center',\r\n    padding: 10,\r\n    backgroundColor:\"white\"\r\n},    \r\ninputContainer:{\r\n\r\n    width:300,\r\n\r\n},\r\nbutton:{\r\n\r\n    width:200,\r\n    marginTop: 10,\r\n\r\n}\r\n\r\n});\r\n","import React, {useLayoutEffect ,useState} from 'react'\r\nimport { StatusBar } from 'expo-status-bar'\r\nimport { KeyboardAvoidingView } from 'react-native'\r\nimport { StyleSheet, View } from 'react-native'\r\nimport { Button, Input, Text,Image } from 'react-native-elements';\r\nimport { auth } from '../firebase';\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\n\r\nconst RegisterScreen = ({navigation}) => {\r\n\r\n   const [name, setName] = useState(\"\");\r\n   const [email, setEmail] = useState(\"\");\r\n   const [password, setPassword] = useState(\"\");\r\n  // const [imageUrl, setImageUrl] = useState(\"\");\r\n   const [profilePic, setProfilePic] = useState();\r\n\r\n\r\n const getPermissions = async () => {\r\n    if (Platform.OS !== \"web\") {\r\n        const {\r\n            status,\r\n        } = await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n        if (status !== \"granted\") {\r\n            alert(\"We need permission to access your camera \");\r\n        }\r\n    }\r\n    pickImage();\r\n};\r\n\r\nconst pickImage = async () => {\r\n    try {\r\n        let result = await ImagePicker.launchImageLibraryAsync({\r\n            mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n            allowsEditing: true,\r\n            aspect: [1, 1],\r\n            quality: 0.5,\r\n        });\r\n        if (!result.cancelled) {\r\n            setProfilePic(result.uri);\r\n        }\r\n    } catch (error) {\r\n        console.log(\"Error @pickImage:\", error);\r\n    }\r\n};\r\n\r\n   const register = () =>{\r\n\r\n    auth\r\n    .createUserWithEmailAndPassword(email, password)\r\n    .then((authUser) =>{\r\n        authUser.user.updateProfile({\r\n            displayName: name,\r\n            photoURL: profilePic || \"https://cencup.com/wp-content/uploads/2019/07/avatar-placeholder.png\"\r\n        })\r\n    })\r\n    .catch((error)=> alert(error.message));\r\n\r\n   };\r\n\r\n   useLayoutEffect (()=>{\r\n    navigation.setOptions({\r\n        headerBackTitle:\"Login\",\r\n    })\r\n   },[navigation]);\r\n\r\n    return (\r\n        <KeyboardAvoidingView behavior=\"padding\" style={styles.container}>\r\n                <StatusBar style=\"light\"/>\r\n                    <Text h3 style={{marginBottom: 50}}>Create a Signal Account</Text>\r\n\r\n                    <View style={styles.profileImage}>\r\n\t\t\t\t\t{!profilePic ? (\r\n\t\t\t\t\t\t<AntDesign\r\n\t\t\t\t\t\t\tname=\"plus\"\r\n\t\t\t\t\t\t\tsize={24}\r\n\t\t\t\t\t\t\tcolor=\"#FFFF\"\r\n\t\t\t\t\t\t\tonPress={getPermissions}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\tsource={{ uri: profilePic }}\r\n\t\t\t\t\t\t\tstyle={{ width: 100, height: 100 }}\r\n\t\t\t\t\t\t\tonPress={getPermissions}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</View>\r\n\r\n                <View style={styles.inputContainer}>\r\n                    <Input placeholder=\"Full Name\" \r\n                    autoFocus type=\"text\" \r\n                     value={name}\r\n                    onChangeText={(text)=> setName(text)}/>\r\n\r\n                    <Input placeholder=\"Email\" \r\n                       value={email}\r\n                    onChangeText={(text)=> setEmail(text)}/>\r\n\r\n                    <Input placeholder=\"Password\"\r\n                    secureTextEntry \r\n                    value={password}\r\n                    onChangeText={(text)=> setPassword(text)}\r\n                    onSubmitEditing={register}/>\r\n\r\n                    {/* <Input placeholder=\"Profile Picture URL (optional)\"\r\n                    value={imageUrl}\r\n                    onChangeText={(text)=> setImageUrl(text)}\r\n                    onSubmitEditing={register}/> */}\r\n\r\n                 </View>\r\n                    <Button containerStyle={styles.button} raised title=\"Register\" onPress={register} />\r\n        </KeyboardAvoidingView>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n\r\n    flex:1, \r\n    alignItems:'center',\r\n    justifyContent:'center',\r\n    padding: 10,\r\n    backgroundColor:\"white\"\r\n\r\n    },\r\n    inputContainer:{\r\n        width:300\r\n    },\r\n    button:{\r\n    width:200,\r\n    marginTop:10\r\n    },\r\n    profileImage: {\r\n\t\tbackgroundColor: \"#2c6bed\",\r\n\t\tborderRadius: 40,\r\n\t\theight: 80,\r\n\t\twidth: 80,\r\n\t\tmarginTop: -20,\r\n\t\tmarginBottom: 10,\r\n\t\toverflow: \"hidden\",\r\n\t\talignSelf: \"center\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t},\r\n})\r\n","import React,{useState, useEffect} from 'react'\r\nimport { StyleSheet, Text, View } from 'react-native'\r\nimport { ListItem, Avatar } from 'react-native-elements';\r\nimport { auth, db } from '../firebase';\r\n\r\nconst CustomListItem = ({id, chatName, enterChat}) => {\r\n\r\n    const [chatMessages, setChatMessages] = useState([])\r\n\r\n    useEffect(() => {\r\n            const unsubscribe = db\r\n            .collection('chats')\r\n            .doc(id).collection('messages')\r\n            .orderBy('timestamp','asc')\r\n            .onSnapshot((snapshot) => \r\n            setChatMessages(snapshot.docs.map((doc)=> doc.data()))\r\n            );\r\n            return unsubscribe;\r\n    })\r\n\r\n\r\n\r\n    return (\r\n\r\n        <ListItem key={id} onPress={()=> enterChat(id, chatName)} key={id} bottomDivider>\r\n            <Avatar \r\n                rounded\r\n                    source={{\r\n                         uri: chatMessages?.[0]?.photoURL ||\r\n                         \"https://cencup.com/wp-content/uploads/2019/07/avatar-placeholder.png\"\r\n                }}\r\n             />\r\n\r\n             <ListItem.Content>\r\n                 <ListItem.Title style={{fontWeight: \"800\"}}>\r\n                    {chatName}\r\n                 </ListItem.Title>\r\n                 <ListItem.Subtitle numberOfLines={1} ellipsizeMode=\"tail\">\r\n                  {chatMessages?.[0]?.displayName}:{chatMessages?.[0]?.message}\r\n                 </ListItem.Subtitle>\r\n             </ListItem.Content>\r\n        </ListItem>\r\n    )\r\n}\r\n\r\nexport default CustomListItem\r\n\r\nconst styles = StyleSheet.create({})\r\n","import React, { useLayoutEffect, useState, useEffect } from 'react'\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { SafeAreaView, StyleSheet,ScrollView, Text, View,Button } from 'react-native'\r\nimport CustomListItem from '../components/CustomListItem'\r\nimport { Avatar } from 'react-native-elements';\r\nimport { auth, db } from '../firebase';\r\nimport { TouchableOpacity } from 'react-native';\r\nimport { AntDesign, SimpleLineIcons } from '@expo/vector-icons';\r\n\r\n\r\nconst HomeScreen = ({navigation}) => {\r\n\r\n    const [chats, setChats] = useState([]);\r\n\r\n    const signOutUser = () => {\r\n        auth.signOut().then(() => {\r\n            navigation.replace('Login')\r\n        })\r\n    };\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = db.collection('chats').onSnapshot(snapshot => {\r\n            setChats(snapshot.docs.map(doc => ({\r\n                id: doc.id,\r\n                data: doc.data()\r\n            })))\r\n        })\r\n        return unsubscribe;\r\n    }, []);\r\n\r\n    useLayoutEffect(()=>{\r\n        navigation.setOptions({\r\n            title:\"Signal\",\r\n            headerTitleAlign:\"left\",\r\n            headerStyle:{backgroundColor:\"#fff\"},\r\n            headerTitleStyle:{color:\"black\"},\r\n            headerTintStyle:\"black\",\r\n            headerLeft: ()=>(\r\n                <View style={{marginLeft: 15}}>\r\n                    <TouchableOpacity onPress={signOutUser} activeOpacity={0.5}>\r\n                    <Avatar rounded source={{uri: auth?.currentUser?.photoURL}} />\r\n                    </TouchableOpacity>\r\n                </View>\r\n            ),\r\n            headerRight: () =>(\r\n\r\n                <View style={{flexDirection : \"row\", justifyContent:'space-between', width:80, marginRight:20}}>\r\n                    <TouchableOpacity activeOpacity={0.5}>\r\n                        <AntDesign name=\"camerao\" size={24} color=\"black\"/>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity activeOpacity={0.5}>\r\n                        <SimpleLineIcons onPress={()=> navigation.navigate('AddChat')} name=\"pencil\" size={24} color=\"black\"/>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            )\r\n\r\n        });\r\n    },[navigation])\r\n\r\n   const enterChat =(id, chatName)=>{\r\n       navigation.navigate('Chat',{\r\n           id,\r\n            chatName\r\n       });\r\n   }\r\n\r\n    return (\r\n        <View>\r\n            <StatusBar style=\"black\"/>\r\n        <ScrollView style={styles.container}>\r\n            {chats.map(({id, data: {chatName}}) =>(\r\n                <CustomListItem key={id} id={id} chatName={chatName} enterChat={enterChat}/>\r\n            ))}         \r\n            \r\n        </ScrollView>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n\r\nconst styles = StyleSheet.create({\r\ncontainer:{\r\n    height:\"100%\"\r\n}\r\n})\r\n","import React,{useLayoutEffect,useState} from 'react'\r\nimport { StyleSheet, Text, View } from 'react-native'\r\nimport { Button, Input } from 'react-native-elements';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport {db} from '../firebase'\r\n\r\nconst AddChatScreen = ({navigation}) => {\r\n\r\n    const [input, setInput] = useState(\"\");\r\n\r\n    useLayoutEffect(() => {\r\n        navigation.setOptions({\r\n            title: \"Add a new chat\",\r\n            headerBackTitle:\"Chats\"\r\n\r\n        })\r\n    }, [navigation])\r\n\r\n    const createChat = async() =>{\r\n        await db.collection('chats').add({\r\n            chatName: input\r\n        }).then(()=> {\r\n            navigation.goBack();\r\n\r\n        }).catch((error) => alert(error));\r\n    };\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n        <Input\r\n         placeholder='Enter a chat name' \r\n         value={input}\r\n         onChangeText={(text)=> setInput(text)}\r\n         onSubmitEditing={createChat}\r\n         leftIcon={\r\n             <Icon name=\"wechat\" type=\"antdesign\" size={24} color=\"black\" />\r\n         }/>\r\n         <Button disabled={!input} onPress={createChat} title=\"Create new chat\" />\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default AddChatScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        backgroundColor:\"white\",\r\n        padding: 30,\r\n        height:\"100%\"\r\n\r\n    }\r\n})\r\n","import React,{useLayoutEffect,useRef, useState} from 'react'\r\nimport {TouchableWithoutFeedback,TextInput, ScrollView, TouchableOpacity, StyleSheet, Text, View, KeyboardAvoidingView, Platform, Keyboard } from 'react-native'\r\nimport { Avatar } from 'react-native-elements'\r\nimport { AntDesign, FontAwesome, Ionicons } from '@expo/vector-icons';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { db, auth } from '../firebase';\r\nimport * as firebase from 'firebase';\r\n\r\n\r\nconst ChatScreen = ({navigation, route}) => {\r\n\r\nconst [input, setInput] = useState(\"\");\r\nconst [messages, setMessages] = useState([])\r\n\r\n    useLayoutEffect( () =>{\r\n            navigation.setOptions({\r\n                title: \"Chat\",\r\n                headerBackTitleVisible: false,\r\n                headerTitleAlign:\"left\",\r\n                headerTitle: () =>(\r\n                    <View style={{flexDirection:'row', alignItems:'center'}}>\r\n                        <Avatar \r\n                            rounded \r\n                                source={{uri: messages[0]?.data.photoURL}} />\r\n                        <Text style={{color:\"white\", marginLeft:10, fontWeight:\"700\"}}>{route.params.chatName}</Text>\r\n                    </View>\r\n                ),\r\n                headerLeft: () =>(\r\n                    <TouchableOpacity style={{marginLeft: 10,}} onPress={navigation.goBack}>\r\n                        <AntDesign name=\"arrowleft\" size={24} color=\"white\"/>\r\n                    </TouchableOpacity>\r\n                ),\r\n                headerRight: () =>(\r\n                    <View style={{flexDirection:\"row\", justifyContent:'space-between', width:80, marginRight:20}}>\r\n                        <TouchableOpacity>\r\n                        <FontAwesome name=\"video-camera\" size={24} color=\"white\"/>\r\n                        </TouchableOpacity>\r\n                        <TouchableOpacity>\r\n                            <FontAwesome name=\"phone\" size={24} color=\"white\" />\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                )\r\n            })\r\n            scrollDownFunc();\r\n    },[navigation, messages]);\r\n\r\n    const sendMessage =() =>{\r\n      Keyboard.dismiss();\r\n\r\n      db.collection(\"chats\")\r\n      .doc(route.params.id)\r\n      .collection(\"messages\")\r\n      .add({timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        message: input,\r\n        displayName: auth.currentUser.displayName,\r\n        email:auth.currentUser.email,\r\n        photoURL: auth.currentUser.photoURL\r\n    });\r\n\r\n        setInput(\"\");\r\n        scrollDownFunc();\r\n    };\r\n\r\n\r\n    const scrollDownDelayed = () => {\r\n        setTimeout(function(){\r\n          scrollDownFunc();\r\n        }, 35);\r\n      }\r\n\r\n    useLayoutEffect(() => {\r\n        const unsubscribe = db\r\n        .collection(\"chats\")\r\n        .doc(route.params.id)\r\n        .collection(\"messages\")\r\n        .orderBy(\"timestamp\",\"asc\")\r\n        .onSnapshot((snapshot)=> setMessages(snapshot.docs.map(doc =>({\r\n                id:doc.id,\r\n                data: doc.data()\r\n        }))))\r\n        scrollDownDelayed();\r\n        return unsubscribe;\r\n    }, [route]);\r\n    \r\n    const scrollDown = useRef();\r\n\r\n    const scrollDownFunc = () => {\r\n      scrollDown.current.scrollToEnd();\r\n    }\r\n\r\n\r\n    return (\r\n        <View style={{flex:1, backgroundColor:\"white\"}}>\r\n            <StatusBar style='light' />\r\n            <KeyboardAvoidingView \r\n            behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"} \r\n            style={styles.container}\r\n            keyboardVerticalOffset={90}>\r\n                <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\r\n                    <>\r\n                    <ScrollView ref={scrollDown} contentContainerStyle={{paddingTop: 15}}>\r\n                        {messages.map(({id, data})=>(\r\n                            data.email === auth.currentUser.email ? (\r\n                                <View key={id} style={styles.reciever}>\r\n                                    <Avatar\r\n                                    position=\"absolute\"\r\n                                    rounded\r\n                                        //web\r\n                                    containerStyle={{\r\n                                        position:\"absolute\",\r\n                                        bottom: -15,\r\n                                        right: -5\r\n                                    }}\r\n                                    \r\n                                    bottom={-15}\r\n                                    right={-5}\r\n                                    size={30}\r\n                                    source={{uri: data.photoURL}} />\r\n                                    <Text style={styles.recieverText}>{data.message}</Text>\r\n                                </View>\r\n                            ) :(\r\n                                <View key={id} style={styles.sender}>\r\n\r\n                                    <Avatar \r\n                                    rounded\r\n                                    //web\r\n                                    position=\"absolute\"\r\n                                    containerStyle={{\r\n                                        position:\"absolute\",\r\n                                        bottom: -15,\r\n                                        left: -5\r\n                                    }}\r\n                                    \r\n                                    bottom={-15}\r\n                                    left={-5}\r\n                                    size={30}\r\n                                    source={{uri: data.photoURL}} />\r\n      \r\n                                    \r\n                                    <Text style={styles.senderText}>{data.message}</Text>\r\n                                    <Text style={styles.senderName}>{data.displayName}</Text>\r\n                                </View>\r\n                            )\r\n                        ))}\r\n                    </ScrollView>\r\n\r\n                    <View style={styles.footer}>\r\n\r\n                        <TextInput \r\n                            value={input} \r\n                            onChangeText={(text)=> setInput(text)} \r\n                            onSubmitEditing={sendMessage}\r\n                            onFocus={scrollDownDelayed}\r\n                            placeholder=\"Signal Message\" \r\n                            style={styles.textInput} />\r\n                        <TouchableOpacity disabled={!input} onPress={sendMessage} activeOpacity={0.5}>\r\n                            <Ionicons name=\"send\" size={24} color=\"#2B68E6\"/>\r\n\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                    </>\r\n                    </TouchableWithoutFeedback>\r\n            </KeyboardAvoidingView>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default ChatScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        flex:1\r\n\r\n    },\r\n    footer:{\r\n        flexDirection:'row',\r\n        alignItems:'center',\r\n        width:\"100%\",\r\n        padding:15\r\n    },\r\n    textInput:{\r\n        bottom:0,\r\n        height:40,\r\n        flex:1,\r\n        marginRight:15,\r\n        borderColor:\"transparent\",\r\n        backgroundColor:\"#ECECEC\",\r\n        padding:10,\r\n        color:\"grey\",\r\n        borderRadius:30\r\n\r\n    }, \r\n    reciever:{\r\n        padding:15,\r\n        backgroundColor:\"#ECECEC\",\r\n        alignSelf:'flex-end',\r\n        borderRadius:20,\r\n        marginRight:15,\r\n        marginBottom: 20,\r\n        maxWidth:\"80%\",\r\n        position:'relative'\r\n\r\n    },\r\n    sender:{\r\n        padding:15,\r\n        backgroundColor:\"#2B68E6\",\r\n        alignSelf:'flex-start',\r\n        borderRadius:20,\r\n        margin: 15,\r\n        maxWidth:\"80%\",\r\n        position:'relative'\r\n    },\r\n    recieverText:{\r\n        \r\n       color:\"black\",\r\n       fontWeight:\"500\",\r\n       marginLeft:10 \r\n    },\r\n    senderText:{\r\n\r\n        color:\"white\",\r\n        fontWeight:\"500\",\r\n        marginLeft:10,\r\n        marginBottom:15\r\n    }, \r\n    senderName:{\r\n        left: 10,\r\n        paddingRight:10,\r\n        fontSize:10,\r\n        color:\"white\"\r\n    }\r\n})\r\n","import 'react-native-gesture-handler';\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport HomeScreen from './screens/HomeScreen';\nimport AddChatScreen from './screens/AddChatScreen';\nimport ChatScreen from './screens/ChatScreen';\n\n\nconst Stack = createStackNavigator();\n\nconst globalScreenOptions = {\n  headerStyle: {backgroundColor: \"#2C6BED\"},\n  headerTitleStyle:{color: \"white\"},\n  headerTintColor : \"white\",\n  headerTitleAlign: \"center\"\n\n}\n\nexport default function App() {\n \n\n  \n  return (\n    <NavigationContainer>\n      <Stack.Navigator \n      //initialRouteName=\"Home\"\n       screenOptions={globalScreenOptions}>  \n            <Stack.Screen name=\"Login\" component={LoginScreen}  />\n            <Stack.Screen name=\"Register\" component={RegisterScreen}  />\n            <Stack.Screen name=\"Home\" component={HomeScreen}  />\n            <Stack.Screen name=\"AddChat\" component={AddChatScreen}  />\n            <Stack.Screen name=\"Chat\" component={ChatScreen}/>\n            \n            </Stack.Navigator>\n\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"],"sourceRoot":""}